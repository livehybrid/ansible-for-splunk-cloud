---
- name: Check if a rule for the port already exists | {{ egress_rule.port }}
  ansible.builtin.set_fact:
    f_egress_rule_exists: "{{ egress_rule.port in (r_splunk_cloud_egress_list.json | json_query('[*].port') | list) }}"
    f_egress_subnet: "{{ egress_rule.subnets | default([]) }}"

- name: Check if the rule contains the same subnets as defined in the inventory | {{ egress_rule.port }}
  ansible.builtin.set_fact:
    f_egress_rule_needs_update: |
      {{ (r_splunk_cloud_egress_list.json | json_query("[? port ==`" + egress_rule.port | string + "`].destinationRanges") | first | default([]) | list)
      | symmetric_difference(f_egress_subnet) | length > 0 }}
  when: f_egress_rule_exists

- name: Remove egress rule before recreating because of changes in the rule | {{ egress_rule.port }}
  ansible.builtin.uri:
    url: "https://{{ splunk_acs_domain }}/{{ splunk_cloud_stack }}/adminconfig/v2/access/outbound-ports/{{ egress_rule.port }}"
    method: DELETE
    body_format: json
    status_code: [200, 202]
    return_content: true
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ splunk_cloud_token }}"
    body: '{ "subnets": {{ cloud_egress_rule_subnets }} }'
  vars:
    cloud_egress_rule_subnets: |
      {{ r_splunk_cloud_egress_list.json | json_query("[? port ==`" + egress_rule.port | string + "`].destinationRanges")
      | first | default([]) | list }}
  when: f_egress_rule_exists and f_egress_rule_needs_update
  changed_when: true
  tags:
    - splunk_cloud_egress_remove
    - splunk_cloud_egress_update

- name: Add/Update egress rule | {{ egress_rule.port }}
  ansible.builtin.uri:
    url: "https://{{ splunk_acs_domain }}/{{ splunk_cloud_stack }}/adminconfig/v2/access/outbound-ports"
    method: POST
    body_format: json
    status_code: [200, 202]
    return_content: true
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ splunk_cloud_token }}"
    body: '{ "outboundPorts": [{ "subnets": {{ egress_rule.subnets }}, "port": {{ egress_rule.port }} }] }'
  changed_when: true
  when:
    - not f_egress_rule_exists or (f_egress_rule_exists and f_egress_rule_needs_update)
    - f_egress_subnet | length > 0
  tags:
    - splunk_cloud_egress_add
    - splunk_cloud_egress_update

- name: "No changes required | {{ egress_rule.port }}"
  ansible.builtin.debug:
    msg: "no changes needed for port: {{ egress_rule.port }}"
  when: f_egress_rule_exists and not f_egress_rule_needs_update
